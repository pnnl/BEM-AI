from typing import Any, Literal

from pydantic import BaseModel, Field


class ServerConfig(BaseModel):
    """Server Configuration."""

    host: str
    port: int
    transport: str
    url: str


class PlannerTask(BaseModel):
    """Represents a single task generated by the Planner."""

    id: int = Field(description="Sequential ID for the task.")
    description: str = Field(
        description="Clear description of the task to be executed."
    )
    status: (
        Any
        | Literal[
            "input_required",
            "completed",
            "error",
            "pending",
            "incomplete",
            "todo",
            "not_started",
        ]
        | None
    ) = Field(description="Status of the task", default="input_required")


class ModelInfo(BaseModel):
    """OpenStudio model Info."""

    model_path: str | None = Field(
        description="=The local directory of the building energy model file."
    )
    building_type: Literal["large-office", "medium-office", "small-office"] = (
        "small-office"
    )
    window_to_wall_ratio: str | None = Field(
        description="Total window to wall ratio of the model"
    )


class TaskList(BaseModel):
    """Output schema for the Planner Agent"""

    original_query: str | None = Field(
        description="The original user query for context."
    )
    blackboard: ModelInfo | None = Field(description="EnergyPlus or OpenStudio modeling task information")

    tasks: list[PlannerTask] = Field(
        description="A list of tasks to be executed sequentially."
    )
